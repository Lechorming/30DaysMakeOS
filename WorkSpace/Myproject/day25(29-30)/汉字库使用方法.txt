在GB2312编码库中, 字符编码分区如下: 
01~09区: 非汉字
10~15区: 空白
16~55区: 一级汉字
56~87区：二级汉字
88~94区: 空白

二进制字符编码=区和位都加上0xa0

例: "啊"字在16区1位
	二进制字符编码计算方法：
		区: 0x10(16) + 0xa0 = 0xb0
		位: 0x01(1) + 0xa0 = 0xa1
		字符编码: 0xb0a1
		
注意大坑:
在jpn16v00中，单个字体的数据位在内存中排列顺序和hzk16不一样, 不可用相同的方法显示输出:
	假设字体为4*4(实际为16*16此处为方便说明等比缩小), 则jpn16v00在内存中排列如下:
	字型			内存中排列
	0100		低地址	->	高地址
	1001  =>	01(左1行)10(左2行)00(左3行)01(左4行)00(右1行)01(右2行)11(右3行)10(右4行)
	0011		此处的两位在内存中实际为8位, 即一个字节的大小
	0110		
	
	01100001 00011110, 左边8位是字体的左半边, 右边是右半边, 故在原书中全角日文先输出左半边再输出右半边;


	但是在hzk16中，单个字体的数据位排列顺序如下:
	字型			内存中排列
	0100		低地址	->	高地址
	1001  =>	01(左1行)00(右1行)10(左2行)01(右2行)00(左3行)119(右3行)01(左4行)10(右4行)
	0011				
	0110
	
	01001001 00110110, 左边8位是字体的上半边, 右边8位是字体的下半边, 故不能用原书中的方法输出中文字符;
	输出方法参考我graphic.c中的putfont8_2函数.
	
	